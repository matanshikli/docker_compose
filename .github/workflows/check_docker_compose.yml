name: Docker Compose Actions Workflow
on:
  push:
    branches: [ main ]
jobs:
  build_and_check:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: forward-lead-354606
      IMAGE_LIST: 'docker_compose_ubuntu,nginx,mysql'
      VNNAME: demo1dddssd101
    steps:
      - uses: actions/checkout@v2
      - shell: pwsh
        id: check_file_changed
        run: |
          # Diff HEAD with the previous commit
          $diff = git diff --name-only HEAD^ HEAD
  
          # Check if a file under docs/ or with the .md extension has changed (added, modified, deleted)
          $SourceDiff = $diff | Where-Object { $_ -match '^scripts/' }
          $HasDiff = $SourceDiff.Length -gt 0
  
          # Set the output named "docs_changed"
          Write-Host "::set-output name=docs_changed::$HasDiff"

      - name: Build the stack
        id: build_stack
        run: docker-compose up -d
        continue-on-error: true

      - name: Check on failures
        if: steps.build_stack.outcome != 'success' 
        run: |-
          echo "Workflow failed!!!"
          exit 1


      - name: Check on success
        if: steps.build_stack.outcome == 'success' 
        run: |-
          echo "Workflow successfully!!!"
          exit 0

      - uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_GCP }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker Client
        run: |-
         gcloud auth configure-docker --quiet
    
      - name: Push Docker Image to Container Registry (GCR)
        run: |-
          IFS="," read -a IMAGE_array <<< ${{ env.IMAGE_LIST }}
          for IMAGE in "${IMAGE_array[@]}" ; do
           docker tag ${IMAGE}:latest gcr.io/$PROJECT_ID/${IMAGE}:latest
           docker push gcr.io/$PROJECT_ID/${IMAGE}:latest
          done

      - name: Deploy Docker image
        run: |-
           gcloud compute instances create $VNNAME \
           --image-project=ubuntu-os-cloud \
           --tags=http-server,https-server \
           --image-family=ubuntu-2004-lts \
           --zone=us-central1-a \
           --metadata=startup-script-url=https://storage.googleapis.com/matantest10/gcp.sh
      

 
  # Run the job only with "docs_changed" equals "True"
  conditional_job:
    runs-on: 'ubuntu-20.04'
    needs: [ build_and_check ]
    if: needs.build_and_check.outputs.docs_changed == 'True'
    steps:
    - shell: pwsh
      run: gsutil cp scripts/gcp.sh gs://matantest10